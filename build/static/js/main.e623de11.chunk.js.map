{"version":3,"sources":["components/verbs/VerbContainer.jsx","components/verbs/VerbList.jsx","components/pages/VerbsPage.jsx","lib/BridgeFunctions.js","components/parser/ParseContainer.jsx","components/pages/DocParserPage.jsx","components/pages/FlashcardsPage.jsx","components/pages/HomePage.jsx","components/App.jsx","index.jsx"],"names":["VerbContainer","verbName","verbData","useState","indicativo","setIndicativo","useEffect","Indicativo","className","align","colSpan","Translation","Object","keys","map","k","VerbList","verbObjects","setVerbObjects","filteredVerbObjects","setFilteredVerbObjects","newVerbObjects","slice","pageStart","loadMore","newItems","length","hasMore","loader","VerbsPage","inputVerb","setInputVerb","filteredVerbs","setFilteredVerbs","allVerbs","filtered","forEach","v","toUpperCase","startsWith","type","value","onChange","event","target","Bridge","funcName","args","Promise","resolve","reject","url","fetch","then","res","json","success","console","log","ParseContainer","isLoading","setIsLoading","inputText","setInputText","nounsObtained","setNounsObtained","verbsObtained","setVerbsObtained","e","disabled","onClick","text","result","nouns","verbs","height","width","DocParserPage","FlashcardsPage","HomePage","App","basename","to","exact","path","component","allITVerbData","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e623de11.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './VerbContainer.scss';\n\nexport const VerbContainer = ({ verbName, verbData }) => {\n    const [indicativo, setIndicativo] = useState([]);\n    useEffect(() => {\n        if (verbData) {\n            setIndicativo(verbData.Indicativo[\"Indicativo presente\"]);\n        }\n    }, [verbData])\n\n    return (\n        <div className=\"verbContainer\">\n            <table align=\"center\" className=\"verbTable\">\n                <thead>\n                    <tr>\n                        <th colSpan={2}>{verbName} - {verbData.Translation}</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        Object.keys(indicativo).map(k => {\n                            return (\n                                <tr>\n                                    <td>{k}</td>\n                                    <td>{indicativo[k]}</td>\n                                </tr>\n                            )\n                        })}\n\n                </tbody>\n                <tfoot>\n                    <tr>\n                        <td colSpan={2}>test</td>\n                    </tr>\n                </tfoot>\n            </table>\n        </div>\n    )\n}","import React, { useState, useEffect } from 'react';\n\nimport './VerbList.scss';\nimport './VerbContainer.jsx';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport { VerbContainer } from './VerbContainer.jsx';\n\nexport const VerbList = ({ verbData }) => {\n    const [verbObjects, setVerbObjects] = useState([]);\n    const [filteredVerbObjects, setFilteredVerbObjects] = useState([]);\n\n    const moreVerbsExist = () => {\n        return filteredVerbObjects.length !== verbObjects.length;\n    }\n\n    const loadFunc = () => {\n        var newItems = verbObjects.slice(0, filteredVerbObjects.length + 4);\n        setFilteredVerbObjects(newItems);\n    }\n\n    useEffect(() => {\n        const newVerbObjects = Object.keys(verbData).map(k => <VerbContainer verbName={k} verbData={verbData[k]}></VerbContainer>)\n        setVerbObjects(newVerbObjects);\n        setFilteredVerbObjects(newVerbObjects.slice(0, 4));\n    }, [verbData]);\n\n    return (\n        <div>\n            <InfiniteScroll\n                pageStart={0}\n                loadMore={loadFunc}\n                hasMore={moreVerbsExist()}\n                loader={<div>loading...</div>}\n            >\n                {filteredVerbObjects}\n            </InfiniteScroll>\n        </div>\n    )\n}","import React, { useState, useEffect } from 'react';\n\nimport { VerbList } from '../verbs/VerbList.jsx';\nimport \"./VerbsPage.scss\";\n\nexport const VerbsPage = ({ verbData }) => {\n    const [inputVerb, setInputVerb] = useState(\"\");\n    const [filteredVerbs, setFilteredVerbs] = useState({});\n\n    useEffect(() => {\n        if (inputVerb.length === 0) {\n            setFilteredVerbs({});\n        } else {\n            const allVerbs = Object.keys(verbData);\n\n            const filtered = {};\n            allVerbs.forEach(v => {\n                if (v.toUpperCase().startsWith(inputVerb.toUpperCase()) ||\n                    verbData[v].Translation.toUpperCase().startsWith(inputVerb.toUpperCase())) {\n                    filtered[v] = verbData[v];\n                }\n            })\n            setFilteredVerbs(filtered);\n        }\n    }, [inputVerb, verbData]);\n\n    return (\n        <div className=\"App-current-page\">\n            <h3>Commonly used verbs</h3>\n            <div className=\"App-verb-search\">\n                <label>Search for verb:</label>\n                <input type=\"text\" value={inputVerb} onChange={event => setInputVerb(event.target.value)}></input>\n            </div>\n            <VerbList\n                verbData={!filteredVerbs || Object.keys(filteredVerbs).length === 0 ?\n                    verbData\n                    :\n                    filteredVerbs\n                }\n            >\n\n            </VerbList>\n        </div>\n    )\n}","export const Bridge = {\n    executeFunction: (funcName, args) => {\n        return new Promise((resolve, reject) => {\n            var url = '/api/executeBackendFunction?funcName=' + funcName + '&';\n            if (Object.keys(args).length > 0) {\n                Object.keys(args).forEach(k => {\n                    url += (k + '=' + args[k] + '&')\n                });\n            }\n            fetch(url.slice(0, -1)).then(\n                res => res.json()\n            ).then(res => {\n                if (res.success === false) console.log(\"warning - function call unsuccessful\")\n                resolve(res);\n            })\n        })\n    }\n}","import React, { useState } from 'react';\nimport './ParseContainer.scss';\nimport Loader from 'react-loader-spinner';\nimport { Bridge } from '../../lib/BridgeFunctions.js';\n\nexport const ParseContainer = () => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [inputText, setInputText] = useState(\"\");\n    const [nounsObtained, setNounsObtained] = useState({});\n    const [verbsObtained, setVerbsObtained] = useState({});\n\n    const onSubmit = () => {\n        setIsLoading(!isLoading);\n        Bridge.executeFunction('parse_input_text', { text: inputText }).then(res => {\n            setIsLoading(false);\n            setNounsObtained(res.result.nouns);\n            setVerbsObtained(res.result.verbs);\n        });\n    }\n\n    return (\n        <div className=\"parser-container-frame\">\n            <h2>Enter text below:</h2>\n            <textarea\n                className=\"parser-container-entry\"\n                onChange={(e) => setInputText(e.target.value)}\n                type=\"text\"\n                value={inputText}>\n            </textarea>\n            <div className=\"parser-options\">\n                <div className=\"parser-options-content\">\n                    <button\n                        disabled={isLoading || inputText === \"\"}\n                        onClick={() => onSubmit()}\n                        className={\"parser-options-button\"}\n                    >\n                        {inputText === \"\" ?\n                            \"Nothing to parse!\"\n                            :\n                            isLoading ? \"Parsing ...\" : \"Submit\"\n                        }\n                    </button>\n                    <div className=\"parser-options-spinner\">\n\n                    </div>\n                    {isLoading ?\n                        <Loader\n                            type=\"Oval\"\n                            height=\"30\"\n                            width=\"30\"\n                        >\n                        </Loader>\n                        :\n                        <>\n                        </>\n                    }\n                </div>\n            </div>\n            {Object.keys(nounsObtained).length !== 0 || Object.keys(verbsObtained).length !== 0 ?\n                <div className=\"parser-tokens\">\n                    <div>\n                        <h3>Nouns collected</h3>\n                        <ul>\n                            {Object.keys(nounsObtained).map((k) => {\n                                return <li>{k + \" - \" + nounsObtained[k]}</li>\n                            })}\n                        </ul>\n                    </div>\n\n                    <div>\n                        <h3>Verbs collected</h3>\n                        <ul>\n                            {Object.keys(verbsObtained).map((k) => {\n                                return <li>{k + \" - \" + verbsObtained[k]}</li>\n                            })}\n                        </ul>\n                    </div>\n                </div>\n\n                :\n\n                <>\n                </>\n            }\n        </div>\n    )\n}","import React from 'react';\nimport './DocParserPage.scss';\nimport { ParseContainer } from \"../parser/ParseContainer.jsx\";\n\nexport const DocParserPage = () => {\n    return(\n        <div className=\"div-doc-parser-page\">\n            <p className=\"doc-parser-page-message\"> Enter text below in Italian and hit submit to grab the verbs and nouns\n                from the text!\n            </p>\n            <div>\n                <ParseContainer></ParseContainer>\n            </div>\n        </div>\n    )\n}","import React from 'react';\nimport './FlashcardsPage.scss';\n\nexport const FlashcardsPage = () => {\n    return(\n        <div>\n        </div>\n    )\n}","import React from 'react';\n\nexport const HomePage = () => {\n\treturn (\n\t\t<div>\n\t\t\t\n\t\t</div>\n\t)\n}","import React from 'react';\nimport { HashRouter, Route, Link } from 'react-router-dom';\n\nimport './App.scss';\n\nimport allITVerbData from '../data/italianVerbData.json';\n\nimport { VerbsPage } from './pages/VerbsPage';\nimport { DocParserPage } from './pages/DocParserPage';\nimport { FlashcardsPage } from './pages/FlashcardsPage';\nimport { HomePage } from './pages/HomePage';\n\nfunction App() {\n  return (\n    <HashRouter basename=\"/\">\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>Italian Verbs with Json</h1>\n          <div className=\"container\">\n            <nav>\n              <ul>\n                <li><Link className=\"nav-link\" to=\"/\">Home</Link></li>\n                <li><Link className=\"nav-link\" to=\"/flashcards\">Flashcards</Link></li>\n                <li><Link className=\"nav-link\" to=\"/verbs\">Verbs</Link></li>\n                <li><Link className=\"nav-link\" to=\"/parser\">Parser</Link></li>\n              </ul>\n            </nav>\n          </div>\n        </header>\n\n        <div className=\"div-page-container\">\n          <Route exact path=\"/\" component={() => (<HomePage></HomePage>)} />\n          <Route exact path=\"/verbs\" component={() => (<VerbsPage verbData={allITVerbData}></VerbsPage>)} />\n          <Route exact path=\"/parser\" component={() => (<DocParserPage></DocParserPage>)} />\n          <Route exact path=\"/flashcards\" component={() => (<FlashcardsPage></FlashcardsPage>)} />\n        </div>\n\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}