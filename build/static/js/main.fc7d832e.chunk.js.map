{"version":3,"sources":["components/verbs/VerbContainer.jsx","components/verbs/VerbList.jsx","components/common/Dropdown.jsx","model/ITVerbModel.js","components/pages/VerbsPage.jsx","components/pages/DocParserPage.jsx","components/pages/FlashcardsPage.jsx","components/pages/HomePage.jsx","components/App.jsx","index.jsx"],"names":["PRONOUNS","VerbContainer","verbName","verbData","translation","className","align","colSpan","Object","keys","map","k","i","getEnglishPronounForRow","VerbList","filterData","useState","verbObjects","setVerbObjects","filteredVerbObjects","setFilteredVerbObjects","useEffect","newVerbObjects","specificData","mood","tense","Translation","slice","pageStart","loadMore","newItems","length","hasMore","loader","Dropdown","category","defaultText","options","onChange","props","for","name","id","e","target","value","op","label","MOODS","INDICATIVO","CONGIUNTIVO","CONDIZIONALE","IMPERATIVO","TENSES","MOOD_TO_TENSES","ITVerbModel","allITMoods","VerbsPage","inputVerb","setInputVerb","filteredVerbs","setFilteredVerbs","initialTense","setFilterData","currentTensesForMood","setCurrentTensesForMood","allVerbs","filtered","forEach","v","toUpperCase","startsWith","onMoodChanged","useCallback","newTensesForMood","assign","onTenseChanged","type","event","values","DocParserPage","FlashcardsPage","HomePage","App","allVerbData","allITVerbData","basename","to","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fc7d832e.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './VerbContainer.scss';\n\nconst PRONOUNS = [\"I\", \"You\", \"He/She\", \"We\", \"You all\", \"They\"];\n\nexport const VerbContainer = ({ verbName, verbData, translation }) => {\n  const getEnglishPronounForRow = (i) => PRONOUNS[i];\n\n  return (\n    <div className=\"verbContainer\">\n      <table align=\"center\" className=\"verbTable\">\n        <thead>\n          <tr>\n            <th colSpan={2}>{verbName + \"-\" + translation}</th>\n          </tr>\n        </thead>\n        <tbody>\n          {\n            Object.keys(verbData).map((k, i) => {\n              return (\n                <tr>\n                  <td>{(i === 2 ?\n                    \"lui/lei\"\n                    :\n                    (i === 5 ?\n                      \"loro\"\n                      :\n                      k\n                    )) + ' (' + getEnglishPronounForRow(i) + ')'}</td>\n                  <td>{verbData[k]}</td>\n                </tr>\n              )\n            })}\n\n        </tbody>\n        <tfoot>\n          <tr>\n            <td colSpan={2}>test</td>\n          </tr>\n        </tfoot>\n      </table>\n    </div>\n  )\n}","import React, { useState, useEffect } from 'react';\n\nimport './VerbList.scss';\nimport './VerbContainer.jsx';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport { VerbContainer } from './VerbContainer.jsx';\n\nexport const VerbList = ({ verbData, filterData }) => {\n  const [verbObjects, setVerbObjects] = useState([]);\n  const [filteredVerbObjects, setFilteredVerbObjects] = useState([]);\n\n  const moreVerbsExist = () => {\n    return filteredVerbObjects.length !== verbObjects.length;\n  }\n\n  const loadFunc = () => {\n    var newItems = verbObjects.slice(0, filteredVerbObjects.length + 4);\n    setFilteredVerbObjects(newItems);\n  }\n\n  const convertVerbDataToContainer = () => {\n    return Object.keys(verbData).map(k => {\n      const specificData = verbData[k][filterData.mood][filterData.tense];\n      if (specificData) {\n        return <VerbContainer verbName={k} verbData={specificData} translation={verbData[k].Translation}></VerbContainer>\n      } else {\n        throw(\"unexpected error, no verb data found!\");\n      }\n    })\n  }\n\n  useEffect(() => {\n    const newVerbObjects = convertVerbDataToContainer();\n    setVerbObjects(newVerbObjects);\n    setFilteredVerbObjects(newVerbObjects.slice(0, 4));\n  }, [verbData, filterData]);\n\n  return (\n    <div>\n      <InfiniteScroll\n        pageStart={0}\n        loadMore={loadFunc}\n        hasMore={moreVerbsExist()}\n        loader={<div>loading...</div>}\n      >\n        {filteredVerbObjects}\n      </InfiniteScroll>\n    </div>\n  )\n}","import React from 'react';\nimport \"./Dropdown.scss\";\n\nexport const Dropdown = ({ category, defaultText, options, onChange, ...props }) => {\n\treturn (\n\t\t<div className=\"div-dropdown\">\n\t\t\t<label for={category}>{defaultText}</label>\n\t\t\t<select className=\"select-dropdown\" name={category} id={category} onChange={(e) => onChange(e.target.value)} {...props}>\n\t\t\t\t{options.map((op, i) => <option value={op.value}>{op.label}</option>)}\n\t\t\t</select>\n\t\t</div>\n\t)\n}","// Define constants for the moods\n\nexport const MOODS = {\n\tINDICATIVO: \"Indicativo\",\n\tCONGIUNTIVO: \"Congiuntivo\",\n\tCONDIZIONALE: \"Condizionale\",\n\tIMPERATIVO: \"Imperativo\",\n\t//INFINITO: \"Infinito\",\n\t//PARTICIPIO: \"Participio\"\n}\n\nexport const TENSES = {\n\t// INDICATIVO\n\tINDICATIVO_PRESENTE: \"Indicativo presente\",\n\tINDICATIVO_PASSATO_PROSSIMO: \"Indicativo passato prossimo\",\n\tINDICATIVO_IMPERFETTO: \"Indicativo imperfetto\",\n\tINDICATIVO_TRAPASSATO_PROSSIMO: \"Indicativo trapassato prossimo\",\n\tINDICATIVO_PASSATO_REMOTO: \"Indicativo passato remoto\",\n\tINDICATIVO_TRAPASSATO_REMOTO: \"Indicativo trapassato remoto\",\n\tINDICATIVO_FUTURO_SEMPLICE: \"Indicativo futuro semplice\",\n\tINDICATIVO_FUTURO_ANTERIORE: \"Indicativo futuro anteriore\",\n\n\t// CONGIUNTIVO\n\tCONGIUNTIVO_PRESENTE: \"Congiuntivo presente\",\n\tCONGIUNTIVO_PASSATO: \"Congiuntivo passato\",\n\tCONGIUNTIVO_IMPERFETTO: \"Congiuntivo imperfetto\",\n\tCONGIUNTIVO_TRAPASSATO: \"Congiuntivo trapassato\",\n\n\t// CONDIZIONALE\n\tCONDIZIONALE_PRESENTE: \"Condizionale presente\",\n\tCONDIZIONALE_PASSATO: \"Condizionale passato\",\n\n\t// IMPERATIVO\n\tIMPERATIVO_AFFERMATIVO: \"Imperativo Affermativo\",\n\tIMPERATIVO_NON: \"Imperativo non\"\n\n\t// INFINITO + PARTICIPIO todo\n}\n\nconst MOOD_TO_TENSES = {\n\t[MOODS.INDICATIVO]:\n\t\t[\n\t\t\tTENSES.INDICATIVO_PRESENTE,\n\t\t\tTENSES.INDICATIVO_PASSATO_PROSSIMO,\n\t\t\tTENSES.INDICATIVO_IMPERFETTO,\n\t\t\tTENSES.INDICATIVO_TRAPASSATO_PROSSIMO,\n\t\t\tTENSES.INDICATIVO_PASSATO_REMOTO,\n\t\t\tTENSES.INDICATIVO_TRAPASSATO_REMOTO,\n\t\t\tTENSES.INDICATIVO_FUTURO_SEMPLICE,\n\t\t\tTENSES.INDICATIVO_FUTURO_ANTERIORE\n\t\t],\n\t[MOODS.CONGIUNTIVO]:\n\t\t[\n\t\t\tTENSES.CONGIUNTIVO_PRESENTE,\n\t\t\tTENSES.CONGIUNTIVO_PASSATO,\n\t\t\tTENSES.CONGIUNTIVO_IMPERFETTO,\n\t\t\tTENSES.CONGIUNTIVO_TRAPASSATO\n\t\t],\n\t[MOODS.CONDIZIONALE]:\n\t\t[\n\t\t\tTENSES.CONDIZIONALE_PRESENTE,\n\t\t\tTENSES.CONDIZIONALE_PASSATO\n\t\t],\n\t[MOODS.IMPERATIVO]:\n\t\t[\n\t\t\tTENSES.IMPERATIVO_AFFERMATIVO,\n\t\t\tTENSES.IMPERATIVO_NON\n\t\t],\n\t//[MOODS.INFINITO]: [],\n\t//[MOODS.PARTICIPIO]: []\n}\n\nexport const ITVerbModel = {\n\tgetAllMoods: () => MOODS,\n\tgetTensesForMood: (mood) => MOOD_TO_TENSES[mood]\n}","import React, { useState, useEffect, useCallback } from 'react';\n\nimport { VerbList } from '../verbs/VerbList.jsx';\nimport { Dropdown } from '../common/Dropdown.jsx';\n\nimport { ITVerbModel, MOODS, TENSES } from '../../model/ITVerbModel.js';\n\nimport \"./VerbsPage.scss\";\n\nconst allITMoods = ITVerbModel.getAllMoods();\n\nexport const VerbsPage = ({ verbData }) => {\n  const [inputVerb, setInputVerb] = useState(\"\");\n  const [filteredVerbs, setFilteredVerbs] = useState({});\n\n  const initialTense = ITVerbModel.getTensesForMood(allITMoods.INDICATIVO)[0];\n  const [filterData, setFilterData] = useState({ mood: allITMoods.INDICATIVO, tense: initialTense })\n  const [currentTensesForMood, setCurrentTensesForMood] = useState(ITVerbModel.getTensesForMood(allITMoods.INDICATIVO));\n\n  useEffect(() => {\n    if (inputVerb.length === 0) {\n      setFilteredVerbs({});\n    } else {\n      const allVerbs = Object.keys(verbData);\n\n      const filtered = {};\n      allVerbs.forEach(v => {\n        if (v.toUpperCase().startsWith(inputVerb.toUpperCase()) ||\n          verbData[v].Translation.toUpperCase().startsWith(inputVerb.toUpperCase())) {\n          filtered[v] = verbData[v];\n        }\n      })\n      setFilteredVerbs(filtered);\n    }\n  }, [inputVerb, verbData]);\n\n  const prepareMoodsForDropdown = () => {\n    return Object.values(ITVerbModel.getAllMoods()).map((label) => Object.assign({}, { label, label }));\n  }\n\n  const prepareTensesForDropdown = () => {\n    return currentTensesForMood.map(tense => Object.assign({}, { value: tense, label: tense }));\n  }\n\n  const onMoodChanged = useCallback((mood) => {\n    const newTensesForMood = ITVerbModel.getTensesForMood(mood);\n    setCurrentTensesForMood(newTensesForMood);\n    setFilterData(Object.assign({}, { mood: mood, tense: newTensesForMood[0] }))\n  }, [filterData]);\n\n  const onTenseChanged = useCallback((tense) => {\n    setFilterData(Object.assign({}, { mood: filterData.mood, tense: tense }));\n  }, [filterData])\n\n  return (\n    <div className=\"verbs-page\">\n      <p>This page shows commonly used verbs!\n        You can use the search bar to search for a specfic verb.\n      </p>\n      <div className=\"App-verb-search\">\n        <label>Search for verb:</label>\n        <input type=\"text\" value={inputVerb} onChange={event => setInputVerb(event.target.value)}></input>\n      </div>\n\n      <div className=\"App-verb-filter\">\n        <Dropdown\n          category=\"Moods\"\n          defaultText=\"Select mood:\"\n          options={prepareMoodsForDropdown()}\n          onChange={onMoodChanged}\n        />\n        <Dropdown\n          category=\"Tenses\"\n          defaultText=\"Select tense:\"\n          options={prepareTensesForDropdown()}\n          onChange={onTenseChanged}\n        />\n      </div>\n      <VerbList\n        verbData={!filteredVerbs || Object.keys(filteredVerbs).length === 0 ?\n          verbData\n          :\n          filteredVerbs\n        }\n        filterData={filterData}\n      >\n\n      </VerbList>\n    </div>\n  )\n}","import React from 'react';\nimport './DocParserPage.scss';\nimport { ParseContainer } from \"../parser/ParseContainer.jsx\";\n\n// disabing this feature for now due to backend problems\nconst FEATURE_ENABLED = false;\n\nconst FEATURE_DISABLED_MESSAGE = \"This feature is currently unavailable.\";\nconst FEATURE_ENABLED_MESSAGE = \"Enter text below in Italian and hit submit to grab the verbs and nouns from the text!\";\n\nexport const DocParserPage = () => {\n  return (\n    <div className=\"div-doc-parser-page\">\n      <p>{FEATURE_ENABLED ? FEATURE_ENABLED_MESSAGE : FEATURE_DISABLED_MESSAGE}</p>\n      {FEATURE_ENABLED ? <ParseContainer /> : null}\n    </div>\n  )\n}","import React from 'react';\nimport './FlashcardsPage.scss';\n\nexport const FlashcardsPage = () => {\n  return (\n    <p className=\"flashcards-page-message\"> This feature is coming soon!</p>\n  )\n}","import React from 'react';\n\nexport const HomePage = () => {\n\treturn (\n\t\t<div>\n\t\t\t\n\t\t</div>\n\t)\n}","import React from 'react';\nimport { HashRouter, Route, Link } from 'react-router-dom';\n\nimport './App.scss';\n\nimport allITVerbData from '../data/italianVerbData.json';\n\nimport { VerbsPage } from './pages/VerbsPage';\nimport { DocParserPage } from './pages/DocParserPage';\nimport { FlashcardsPage } from './pages/FlashcardsPage';\nimport { HomePage } from './pages/HomePage';\n\nfunction App() {\n  const allVerbData = allITVerbData;\n\n  return (\n    <HashRouter basename=\"/\">\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div className=\"div-top-header\">\n            <h1 className=\"h-site-header\">Language learning with Json</h1>\n          </div>\n          <div className=\"container\">\n            <nav>\n              <ul>\n                <li><Link className=\"nav-link\" to=\"/\">Home</Link></li>\n                <li><Link className=\"nav-link\" to=\"/flashcards\">Flashcards</Link></li>\n                <li><Link className=\"nav-link\" to=\"/verbs\">Verbs</Link></li>\n                <li><Link className=\"nav-link\" to=\"/parser\">Parser</Link></li>\n              </ul>\n            </nav>\n          </div>\n        </header>\n\n        <div className=\"div-page-wrapper\">\n          <div className=\"div-page-container\">\n            <Route exact path=\"/\" component={() => (<HomePage></HomePage>)} />\n            <Route exact path=\"/verbs\" component={() => (<VerbsPage verbData={allVerbData}></VerbsPage>)} />\n            <Route exact path=\"/parser\" component={() => (<DocParserPage></DocParserPage>)} />\n            <Route exact path=\"/flashcards\" component={() => (<FlashcardsPage></FlashcardsPage>)} />\n          </div>\n        </div>\n\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}